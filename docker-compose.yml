version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: venus-ai-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: venus-ai
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - venus-ai-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: venus-ai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - venus-ai-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: venus-ai-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/venus-ai?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:5173
      AI_SERVICE_URL: http://ai-service:8001
      CHAT_PROCESSOR_URL: http://chat-processor:8002
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - venus-ai-network

  # AI Service (Python)
  ai-service:
    build:
      context: ./python-services/ai-service
      dockerfile: Dockerfile
    container_name: venus-ai-ai-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      SERVICE_HOST: 0.0.0.0
      SERVICE_PORT: 8001
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      DEEPSEEK_API_URL: https://api.deepseek.com/v1
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:5173", "http://localhost:5000"]'
    volumes:
      - ./python-services/ai-service:/app
    networks:
      - venus-ai-network

  # Chat Processor Service (Python)
  chat-processor:
    build:
      context: ./python-services/chat-processor
      dockerfile: Dockerfile
    container_name: venus-ai-chat-processor
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      SERVICE_HOST: 0.0.0.0
      SERVICE_PORT: 8002
      AI_SERVICE_URL: http://ai-service:8001
      BACKEND_SERVICE_URL: http://backend:5000
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:5173", "http://localhost:5000"]'
    depends_on:
      - ai-service
    volumes:
      - ./python-services/chat-processor:/app
    networks:
      - venus-ai-network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: venus-ai-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:5000/api
      VITE_SOCKET_URL: http://localhost:5000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - venus-ai-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  venus-ai-network:
    driver: bridge
